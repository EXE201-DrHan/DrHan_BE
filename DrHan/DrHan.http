@DrHan_HostAddress = http://localhost:5022

GET {{DrHan_HostAddress}}/weatherforecast/
Accept: application/json

### Health Check
GET {{host}}/health

### Get Smart Generation Options
GET {{host}}/api/mealplans/smart-generation/options
Authorization: Bearer {{token}}

### Generate Smart Meal Plan
POST {{host}}/api/mealplans/generate-smart
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "My Smart Meal Plan",
  "startDate": "2024-01-01",
  "endDate": "2024-01-07",
  "planType": "Weekly",
  "preferences": {
    "cuisineTypes": ["Italian", "Mediterranean"],
    "maxCookingTime": 45,
    "budgetRange": "medium",
    "preferredMealTypes": ["breakfast", "lunch", "dinner"],
    "includeLeftovers": true,
    "varietyMode": true
  }
}

### Generate Smart Meals into Existing Plan
POST {{host}}/api/mealplans/456/generate-smart-meals
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "preferences": {
    "cuisineTypes": ["Asian", "Mediterranean"],
    "maxCookingTime": 30,
    "budgetRange": "medium",
    "varietyMode": true
  },
  "targetDates": ["2024-01-01", "2024-01-02"],
  "mealTypes": ["Breakfast", "Lunch"],
  "replaceExisting": false,
  "preserveFavorites": true
}

### Resend OTP
POST {{host}}/api/authentication/resend-otp
Content-Type: application/json

{
  "email": "user@example.com"
}

### Reactivate Abandoned Account
POST {{host}}/api/authentication/reactivate-account
Content-Type: application/json

{
  "email": "abandoned@example.com"
}

### Test No Results - Non-existent Cuisine
POST {{host}}/api/mealplans/generate-smart
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Test No Results Meal Plan",
  "startDate": "2024-01-01",
  "endDate": "2024-01-03",
  "planType": "Personal",
  "preferences": {
    "cuisineTypes": ["nhật bản", "korean"],
    "maxCookingTime": 10,
    "budgetRange": "low"
  }
}

### Test With Existing Cuisine - Should Work
POST {{host}}/api/mealplans/generate-smart
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Test Working Meal Plan",
  "startDate": "2024-01-01",
  "endDate": "2024-01-03",
  "planType": "Personal",
  "preferences": {
    "cuisineTypes": ["Ý"],
    "maxCookingTime": 60,
    "budgetRange": "medium"
  }
}

###

### Test Meal Entry Override Functionality

# First, add a meal entry to meal plan
POST {{host}}/api/mealplans/1/entries
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "mealDate": "2024-01-15",
  "mealType": "1",
  "recipeId": 123,
  "servings": 1,
  "notes": "First meal entry"
}

### Add another meal entry for the same day and meal type (should override the previous one)
POST {{host}}/api/mealplans/1/entries
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "mealDate": "2024-01-15",
  "mealType": "1",
  "recipeId": 456,
  "servings": 2,
  "notes": "Updated meal entry - should override the first one"
}

### Add meal entry for different meal type on same day (should create new entry)
POST {{host}}/api/mealplans/1/entries
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "mealDate": "2024-01-15",
  "mealType": "2",
  "recipeId": 789,
  "servings": 1,
  "notes": "Lunch meal - different meal type"
}

### Add meal entry for same meal type but different day (should create new entry)
POST {{host}}/api/mealplans/1/entries
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "mealDate": "2024-01-16",
  "mealType": "1", 
  "recipeId": 321,
  "servings": 1,
  "notes": "Breakfast for next day"
}

###
